{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Counter/Counter.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","FeedbackOptions","onIncrement","type","onClick","Statistics","good","neutral","bad","total","goodPercent","Notification","message","Counter","useState","setGood","setNeutral","setBad","Math","round","e","target","dataset","name","state","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,UAAY,+B,kKCKfC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,OCKxBI,G,MANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,6BAAKA,MCmBrBC,G,MAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACtB,sBAAKN,UAAU,gBAAf,UACE,wBAAQO,KAAK,SAAS,YAAU,OAAOC,QAASF,EAAhD,kBAGA,wBAAQC,KAAK,SAAS,YAAU,UAAUC,QAASF,EAAnD,qBAGA,wBAAQC,KAAK,SAAS,YAAU,MAAMC,QAASF,EAA/C,sBCSWG,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,YAA9B,OACnB,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCAWC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC0D3BC,MAnDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAkBMR,EAAQH,EAAOC,EAAUC,EACzBE,EAAcQ,KAAKC,MAAOb,EAAOG,EAAS,KAChD,OACE,sBAAKb,UAAU,UAAf,UACE,cAAC,EAAD,CAASI,MAAM,0BACf,cAAC,EAAD,CAAiBE,YArBG,SAAAkB,GACtB,OAAQA,EAAEC,OAAOC,QAAQC,MACvB,IAAK,OACHR,GAAQ,SAAAS,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHR,GAAW,SAAAQ,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHP,GAAO,SAAAO,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,WAUF,cAAC,EAAD,CAASxB,MAAM,eACdS,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,YAAaA,IAGf,cAAC,EAAD,CAAcE,QAAQ,6BC1Cf,SAASa,IACtB,OAAO,cAAC,EAAD,UACL,cAAC,EAAD,MCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.cc82a8bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2V3bz\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title }) => <h3>{title}</h3>;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onIncrement }) => (\n  <div className=\"Counter__btns\">\n    <button type=\"button\" data-name=\"good\" onClick={onIncrement}>\n      Good\n    </button>\n    <button type=\"button\" data-name=\"neutral\" onClick={onIncrement}>\n      Neutral\n    </button>\n    <button type=\"button\" data-name=\"bad\" onClick={onIncrement}>\n      Bad\n    </button>\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onIncrement: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nconst Statistics = ({ good, neutral, bad, total, goodPercent }) => (\n<>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive feedback: {goodPercent}%</p>\n</>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  goodPercent: PropTypes.number.isRequired,\n\n};\n\nexport default Statistics;","import PropTypes from 'prop-types';\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport './Counter.module.css';\nimport Section from '../Section/Section';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\n\nfunction Counter() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = e => {\n    switch (e.target.dataset.name) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const total = good + neutral + bad;\n  const goodPercent = Math.round((good / total) * 100);\n  return (\n    <div className=\"Counter\">\n      <Section title=\"Please leave feedback\" />\n      <FeedbackOptions onIncrement={handleIncrement} />\n      <Section title=\"Statistics\" />\n      {total > 0 ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          goodPercent={goodPercent}\n        />\n      ) : (\n        <Notification message=\"There is no feedback\" />\n      )}\n    </div>\n  );\n}\n\nCounter.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  goodPercent: PropTypes.number,\n};\n\nexport default Counter;\n","import Container from './components/Container/Container';\nimport Counter from './components/Counter/Counter';\n\nexport default function App() {\n  return <Container>\n    <Counter />\n  </Container>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}